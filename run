#!/bin/bash

export GIT_ROOTDIR=$(git rev-parse --show-toplevel)
export DTR_NAMESPACE=doevelopper
export RND_NS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)

function helpFunction()
{
	cat <<tac
Usage: $0 [options]

Options:
    --base        -b   Run common SW developemment platform.
    --adlinktech  -a   Run Vortex OpenSplice DDS container for SW dev.
    --eprosima    -e   Run Fast-RTPS DDS container for SW dev.
    --opendds     -o   Run OMG OpenDDS container for SW dev.
    --dind        -d   Run my custum docker in docker container.
    --rti         -r   Run RTI DDS container.

Note: Combining options (like this: -qkn) not handled.
tac
	exit 0
}

if [ $# -lt 1 ];then
	helpFunction
  exit 1
fi

select_container () {
	# Parse arguments.
	#
	while [ "$1" != "" ]; do
		ARG="$1"
		shift
		if [ -d "$ARG" ]; then
			WORKINGDIR="$ARG"
			continue
		else
			case $ARG in
				-b|--base)
					export CONTAINER="doevelopper/cfs-dev-tools-common"
					run_container
					;;
				-a|--adlinktech)
					export CONTAINER="doevelopper/cfs-dev-tools-adlinktech"
					run_container
					;;
				-o|--opendds)
					export CONTAINER="doevelopper/cfs-dev-tools-opendds"
					run_container
					;;
				-e|--eprosima)
					export CONTAINER="doevelopper/cfs-dev-tools-eprosima"
					run_container
					;;
				-r|--rti)
					export CONTAINER="doevelopper/cfs-dev-tools-rti"
					run_container
					;;
				--dind)
					export CONTAINER="doevelopper/cfs-dev-tools-dind"
					run_container
					;;
				*)
					helpFunction
					;;
			esac
		fi
	done
}

# --memory="1024m"
# --memory=$(($(head -n 1 /proc/meminfo | awk '{print $2}') * 4 / 5))k \
# --cpus=$((`nproc` - 1))
# --log-opt max-size=50m  \
# --volume /etc/passwd:/etc/passwd:ro \
# --volume /tmp/.X11-unix:/tmp/.X11-unix:rw \
# --volume ${HOME}/.Xauthority:/root/.Xauthority \
# --env DISPLAY=unix${DISPLAY}
# --env LANG=C.UTF-8 \
# --env LC_ALL=C.UTF-8 \
# --env DOCKER_USER=`id -un` \
# --env DOCKER_USER_ID=`id -u` \
# --env DOCKER_PASSWORD=`id -un` \
# --env DOCKER_GROUP_ID=`id -g`

run_container() {
	docker run --rm --volume /etc/passwd:/etc/passwd:ro --volume /etc/group:/etc/group:ro --volume ${HOME}/.ssh:/home/${USER}/.ssh --volume ${HOME}/.conan:/home/${USER}/.conan --volume ${HOME}/.m2:/home/${USER}/.m2 --volume $GIT_ROOTDIR/src/main/resources/dotfiles/.vim:/home/${USER}/.vim --volume $GIT_ROOTDIR/src/main/resources/dotfiles/.vimrc:/home/${USER}/.vimrc  --volume $GIT_ROOTDIR/src/main/resources/dotfiles/.aliases:/home/${USER}/.aliases --volume $GIT_ROOTDIR/src/main/resources/dotfiles/.env:/home/${USER}/.env --volume $GIT_ROOTDIR/src/main/resources/dotfiles/.functions:/home/${USER}/.functions  --volume $GIT_ROOTDIR/src/main/resources/dotfiles/.bashrc:/home/${USER}/.bashrc --workdir "/home/${USER}/$(basename ${PWD})" --volume ${PWD}:/home/${USER}/$(basename ${PWD}) --user $(id -u ${USER}):$(id -g ${USER}) --name=$(whoami) --hostname="$(basename ${PWD})-${RND_NS}" --tty --interactive ${CONTAINER}:0.0.1
}

select_container $@
